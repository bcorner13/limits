require 'spec_helper'

describe 'limits_test_cookbook::invalid' do
  subject do
    ChefSpec::SoloRunner.new(step_into: %w[limits_config]) do |node|
      allow(node).to receive(:name).and_return('limits-test-node')
    end.converge(described_recipe)
  end

  it do
    is_expected.to create_limits_config('invalid.conf')
      .with(
        limits: [
          { domain: 'phil', type: 'squishy', item: 'maxlogins', value: 5 },
          { domain: 'kyle', type: 'softish', item: 'nproc', value: 678 }
        ]
      )
  end

  it do
    is_expected.to create_directory('conf directory for invalid.conf')
      .with(
        path: '/etc/security/limits.d',
        owner: 'root',
        group: 'root',
        mode: 0o755,
        recursive: true
      )
  end

  it do
    is_expected.to create_template('/etc/security/limits.d/invalid.conf')
      .with(
        cookbook: 'limits',
        source: 'limits.d.conf.erb',
        owner: 'root',
        group: 'root',
        mode: 0o644,
        variables: {
          valid_limits: [],
          invalid_limits: ['phil squishy maxlogins 5',
                           'kyle softish nproc     678']
        }
      )
  end

  it do
    is_expected.to render_file('/etc/security/limits.d/invalid.conf')
      .with_content(
        <<-EOF
# Generated by Chef for node limits-test-node
# Local modifications will be overwritten!

# The following limits were detected as invalid by Chef
# phil squishy maxlogins 5
# kyle softish nproc     678

# End of file
      EOF
      )
  end
end
