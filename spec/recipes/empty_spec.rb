require 'spec_helper'

describe 'limits_test_cookbook::empty' do
  subject do
    ChefSpec::SoloRunner.new(step_into: %w(limits_config)) do |node|
      allow(node).to receive(:name).and_return('limits-test-node')
    end.converge(described_recipe)
  end

  it { is_expected.to create_limits_config('empty').with(limits: []) }

  it do
    is_expected.to create_directory('conf directory for empty')
      .with(
        path: '/etc/security/limits.d',
        owner: 'root',
        group: 'root',
        mode: 0o755,
        recursive: true
      )
  end

  it do
    is_expected.to create_template('/etc/security/limits.d/empty.conf')
      .with(
        cookbook: 'limits',
        source: 'limits.d.conf.erb',
        owner: 'root',
        group: 'root',
        mode: 0o644,
        variables: { valid_limits: [], invalid_limits: [] }
      )
  end

  it do
    is_expected.to render_file('/etc/security/limits.d/empty.conf')
      .with_content(
        <<-EOF
# Generated by Chef for node limits-test-node
# Local modifications will be overwritten!

# End of file
      EOF
      )
  end
end
